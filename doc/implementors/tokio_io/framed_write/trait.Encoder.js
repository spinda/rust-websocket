(function() {var implementors = {};
implementors["websocket"] = ["impl <a class=\"trait\" href=\"tokio_io/framed_write/trait.Encoder.html\" title=\"trait tokio_io::framed_write::Encoder\">Encoder</a> for <a class=\"struct\" href=\"websocket/codec/http/struct.HttpClientCodec.html\" title=\"struct websocket::codec::http::HttpClientCodec\">HttpClientCodec</a>","impl <a class=\"trait\" href=\"tokio_io/framed_write/trait.Encoder.html\" title=\"trait tokio_io::framed_write::Encoder\">Encoder</a> for <a class=\"struct\" href=\"websocket/codec/http/struct.HttpServerCodec.html\" title=\"struct websocket::codec::http::HttpServerCodec\">HttpServerCodec</a>","impl&lt;D&gt; <a class=\"trait\" href=\"tokio_io/framed_write/trait.Encoder.html\" title=\"trait tokio_io::framed_write::Encoder\">Encoder</a> for <a class=\"struct\" href=\"websocket/codec/ws/struct.DataFrameCodec.html\" title=\"struct websocket::codec::ws::DataFrameCodec\">DataFrameCodec</a>&lt;D&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"trait\" href=\"websocket/ws/dataframe/trait.DataFrame.html\" title=\"trait websocket::ws::dataframe::DataFrame\">DataFrameTrait</a>&gt;,&nbsp;</span>","impl&lt;M&gt; <a class=\"trait\" href=\"tokio_io/framed_write/trait.Encoder.html\" title=\"trait tokio_io::framed_write::Encoder\">Encoder</a> for <a class=\"struct\" href=\"websocket/codec/ws/struct.MessageCodec.html\" title=\"struct websocket::codec::ws::MessageCodec\">MessageCodec</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"websocket/ws/message/trait.Message.html\" title=\"trait websocket::ws::message::Message\">MessageTrait</a>,&nbsp;</span>",];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
